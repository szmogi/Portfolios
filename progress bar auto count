

//I used this cod for my portfolio.
//I needed to animate my skills. The progress bar starts from null to the desired value. You will also need an icon for your skills.

  
 
  iconArray:
        [
            {id:id++, name:'Css', icon:'icons8-css3-120.png',
            color:'linear-gradient(90deg, rgba(0,96,253,1) 1%, rgba(33,129,199,1) 34%, rgba(76,145,198,1) 59%, rgba(65,107,236,1) 96%)',
            numberPercete:70,progressWidth:'70%'},           
            {id:id++, name:'Git',  icon:'icons8-git-96.png',
            color:'linear-gradient(90deg, rgba(255,112,83,1) 1%, rgba(200,154,48,1) 31%, rgba(255,122,96,1) 59%, rgba(232,169,25,1) 96%)',
            numberPercete:30,progressWidth:'30%'},
            {id:id++, name:'Google',  icon:'icons8-google-96.png',
            color:'linear-gradient(90deg, rgba(233,66,53,1) 1%, rgba(250,187,5,1) 43%, rgba(52,168,83,1) 75%, rgba(66,133,244,1) 96%)',
            numberPercete:70,progressWidth:'70%'},
            {id:id++, name:'Html',  icon:'icons8-html-5-96.png',
            color:' linear-gradient(110deg, rgba(228,50,0,1) 1%, rgba(255,160,133,1) 29%, rgba(224,49,0,1) 64%, rgba(255,132,98,1) 83%)',
            numberPercete:70,progressWidth:'70%'},
            {id:id++, name:'JavaScript',  icon:'icons8-javascript-logo-96.png',
            color:'linear-gradient(75deg, rgba(207,180,51,1) 1%, rgba(255,207,0,1) 25%, rgba(226,187,1,1) 66%, rgba(255,225,96,1) 83%)',
            numberPercete:60,progressWidth:'60%'},
            {id:id++, name:'jQuery', icon:'icons8-jquery-96.png',
            color:'linear-gradient(287deg, rgb(5, 115, 189) 13%, rgb(204 234 253) 34%, rgb(24 145 226) 56%, rgb(154 191 255) 103%)',
            numberPercete:60,progressWidth:'60%'},
            {id:id++, name:'Laravel', icon:'icons8-laravel-100.png',
            color:'linear-gradient(90deg, rgba(255,34,26,1) 1%, rgba(235,113,109,1) 36%, rgba(255,102,96,1) 71%, rgba(255,68,63,1) 94%)',
            numberPercete:60,progressWidth:'60%'},
            {id:id++, name:'Mysql',  icon:'icons8-mysql-logo-96.png',
            color:'linear-gradient(250deg, rgb(0 129 184) 26%, rgb(251 169 33) 47%, rgb(0, 94, 134) 67%, rgb(221, 138, 0) 89%)',
            numberPercete:50,progressWidth:'50%'},
            {id:id++, name:'Php',  icon:'icons8-php-logo-96.png',
            color:'linear-gradient(90deg, rgba(9,9,9,0.7217261904761905) 1%, rgba(115,119,173,1) 36%, rgba(80,87,177,1) 63%, rgba(138,144,218,1) 94%)',
            numberPercete:50,progressWidth:'50%'},
            {id:id++, name:'Sass',  icon:'icons8-sass-avatar-96.png',
            color:'linear-gradient(90deg, rgba(198,99,148,1) 1%, rgba(148,155,249,1) 36%, rgba(198,99,148,1) 63%, rgba(180,185,245,1) 94%)',
            numberPercete:60,progressWidth:'60%'},
            {id:id++, name:'Vue.js',  icon:'icons8-vuejs-96.png',
            color:'linear-gradient(241deg, rgba(63,178,127,1) 5%, rgba(59,143,115,1) 15%, rgba(51,71,91,1) 36%, rgba(63,178,127,1) 76%, rgba(51,71,91,1) 91%)',
            numberPercete:60,progressWidth:'60%'}
          ]

    }
    
    
    
    
    
    
         //vue componet entrance    
                        
                    <me-skills v-for="item in iconArray" :key="item.id"                
                     v-show="skillsIconVis"  
                    :icon-Name="item.icon"
                    :ide="item.id"
                    :progress-color="item.color"
                    :number-percente="item.numberPercete"
                    :progress-width="item.progressWidth"
                    :skills-anime="this.isSkillAnime" 
                    :name="item.name"
                              >

                    </me-skills>
                    
                    
                    
                    
         //vue componet inside
         
         



          <template>

             <div v-if="skills" class="skills-flex">    

                   <figure :id="'icon-'+this.ide">
                         <img :class="this.name" style="cursor:pointer" @mouseover="mouse(event)"  @mouseleave="mouse(event)"  :src="'src/assets/icon/'+iconName"   alt="">     
                   </figure>      
                <div  ref='endAnime' class="skills-meter">
                    <div :data-interval="progressInterval" :data-endwidth="progressWidth" :style="'background:'+this.progressColor+';'+this.width" :id="'progress-bar'+ide"></div>
                    <strong id="count-match"  :data-counttarget="numberPercente" :data-duration="progressDuration" ></strong>                   
                </div>

             </div>

          </template>

          <script>
          import {progressBarCount,resetProgressBar} from "../helpers/helpers.js"
          export default {
             props: {
                iconName:{
                   type:String         
                },
                numberPercente:{
                   type:Number,
                   default:80,
                },
                progressColor:{
                   type:String,
                   default:"ffff"
                },
                ide:{
                   type:Number,
                   default:null,
                },
                progressWidth:{
                   type:String,
                   default:'80%',
                },
                progressDuration:{
                   type:Number,
                   default:1500,
                },
                progressInterval:{
                   type:Number,
                   default:500,
                },
                skillsAnime:{
                   type:Boolean,
                   default:false,
                },
                hoverTxt:{
                   type:Boolean,
                   default:false,
                },
                name:{
                   type:String,
                   default:'nop'
                }

             },
             data () {  
                return {    
                   endNumber:0,    
                   count:0,
                   width:"",
                   number:0,
                   endAnimated:false,
                   skills:true,         

                }      


             },watch:{
                skillsAnime:function(val){         
                   if(val === true){
                      this.progressBar()           
                      var interVal =  setInterval(()=>{
                          if(document.getElementById('end-animated')){
                               this.endAnimated = true
                               clearInterval(interVal);                     
                          }else{return}
                      },500)
                   }else{
                     this.resetProgressBar()
                      if(document.getElementById('end-animated')){
                               this.endAnimated = false

                        }else{return}
                   }
                },
                endAnimated:function(val){
                      if(val === true){
                         this.$emit('next-Pages',true)
                      }else{return}
                },

              },  
             mounted (){      

              }, 

              created(){         

              },methods:{
                  resetProgressBar,
                  progressBarCount,
                  progressBar(){
                        this.progressBarCount()

                  }, 
                   mouse(){           
                    var X = event.clientX
                    var Y = event.clientY
                    var Xpercent = Math.round((X * 100 / window.innerWidth)  ) + '%'
                    var Ypercent = Math.round((Y * 100 / window.innerHeight) ) + '%'
                    var name = this.$el.children[0].firstElementChild.className;


                    if(event.type === 'mouseleave'){              
                          document.getElementById('appendText').remove()             

                    }else{

                    if(document.getElementById('appendText')){
                       document.getElementById('appendText').remove()
                    }           

                    var element = document.createElement('h1')
                    element.id = 'appendText'
                    element.className = name
                    element.style.cssText = 'opacity:0; pointer-events: none; position: fixed; cursor:pointer; z-index: 10; color: rgb(53, 52, 52); padding: 0rem 0.3rem; background: #fff; border: 1px solid lightgrey; border-radius: 5px ;  font-size: 0.8rem; font-weight: 100;'
                    element.innerText = name      
                    element.style.left = Xpercent;
                    element.style.top = Ypercent;

                    document.querySelector('#app').append(element) 
                    element.animate([{opacity:0},{opacity:1}],{duration:300})
                    setTimeout(()=>{element.style.opacity = 1},10 )

                    }

                },



               }

             }
          </script>
         
         
         
         
         
         
       //helpers.js progressBarCount
         
         
        // Export a progress bar count.
         export function progressBarCount(){
            
               var progressBar = document.querySelectorAll('.skills-meter > div')
               var timeout = 500;              
               var count = progressBar.length
            
            
               for (let i = 0; i < count; i++) {
               var element = document.getElementById('progress-bar'+i)             
               var interval = parseInt(element.getAttribute('data-interval'))          
                        
                     setTimeout(() => {
                        var element = document.getElementById('progress-bar'+i)
                        var icon = document.getElementById('icon-'+i)
                        var endWidth = parseInt(element.getAttribute('data-endwidth'))
                        var nextElement = element.nextElementSibling
                        var duration = parseInt(nextElement.getAttribute('data-duration'))                          
                        var counte = 0;   
                        
                        if(i == count-1){
                           document.querySelector('.skills-meter').setAttribute('id','end-animated')                 
                        }


                        icon.animate([{opacity:'0%'},{opacity:'100%'}],{duration:1000})
                        icon.style.opacity = '100%'
                        
                        var intervalCount = 60 - (endWidth / 10 ) * 5;
                            intervalCount = (intervalCount.toFixed(0))                     
                        
                     
                              element.animate([{width:'0%'},                                                   
                                              {width:endWidth+'%'}],{duration:duration})                     
                                 
                                 element.style.width = endWidth+'%'                 
                                 const updateCounter = () => {
                                    const countTarget = parseInt(nextElement.getAttribute('data-counttarget'));
                                    counte++;                       
                                    if (counte <= countTarget) {
                                       nextElement.innerHTML = counte + '%';                          
                                       setTimeout(updateCounter, intervalCount );
                                    } else {
                                       return
                                    }
                                 };
                                 updateCounter();        

                           setTimeout(()=>{nextElement.setAttribute('class','bounce-enter-active')},1500)
                                    
                           }, timeout);              

                        timeout = timeout + interval       

                  }   


         }





    // Resets the progress bar.
       export function resetProgressBar(){
     
         var progressBar = document.querySelectorAll('.skills-meter > div')
         var timeout = 500;              
         var count = progressBar.length
        
        
         for (let i = count ; --i >= 0;) {
         var element = document.getElementById('progress-bar'+i)             
         var interval = parseInt(element.getAttribute('data-interval'))          
                    
               setTimeout(() => {
                  var element = document.getElementById('progress-bar'+i)
                  var icon = document.getElementById('icon-'+i)
                  var endWidth = parseInt(element.getAttribute('data-endwidth'))
                  var nextElement = element.nextElementSibling
                  var duration = parseInt(nextElement.getAttribute('data-duration'))                          
                  var counte = 0;   
                  
                  if(i == count-1){
                     document.querySelector('.skills-meter').setAttribute('id','end-animated')                 
                    }
   
   
                  icon.animate([{opacity:'100%'},{opacity:'0%'}],{duration:3000})
                  icon.style.opacity = '0%'        
                  element.animate([{width:endWidth+'%'},                                                   
                         {width:'0%'}],{duration:duration})                            
                         element.style.width ='0%'                 
                         nextElement.innerHTML ='';                                       
   
                    
                              
                     }, timeout);              
   
                  timeout = timeout + interval       
   
            }   
   
   
   }
                                  
                    
                    
                    
                    
                    
                    
                    
                  


     
